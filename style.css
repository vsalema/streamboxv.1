:root {
  --bg: #0b0b0b;
  --bg-alt: #111;
  --text: #eee;
  --border: #222;
  --accent: #3b82f6;
}
body.light {
  --bg: #fafafa;
  --bg-alt: #fff;
  --text: #111;
  --border: #ccc;
  --accent: #2563eb;
}
* { box-sizing: border-box; font-family: 'Inter', system-ui, sans-serif; }
body {
  background: var(--bg);
  color: var(--text);
  display: flex;
  flex-direction: column;
  height: 100vh;
}
header {
  background: var(--bg-alt);
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 12px;
  border-bottom: 1px solid var(--border);
}
.logo {
  display: flex;
  align-items: center;
}
.header-logo {
  width: 60px;
  height: auto;
  vertical-align: middle;
  filter: drop-shadow(0 0 6px var(--accent));
  transition: filter 0.3s;
}
.logo.playing .header-logo {
  filter: drop-shadow(0 0 14px var(--accent));
}
.fileLabel {
  display: inline-flex; align-items: center; gap: 6px;
  background: var(--bg); color: var(--text);
  border: 1px solid var(--border); border-radius: 8px; padding: 6px 10px; cursor: pointer;
}
.fileLabel input { display:none; }

.controls {
  display: flex;
  gap: 8px;
  align-items: center;
  flex-wrap: wrap;
}
input, select {
  flex: 1;
  min-width: 180px;
  padding: 8px 12px;
  border-radius: 8px;
  border: 1px solid var(--border);
  background: var(--bg);
  color: var(--text);
}
button {
  border: none;
  padding: 8px 14px;
  border-radius: 8px;
  cursor: pointer;
  background: var(--accent);
  color: white;
  font-weight: 600;
}
button:hover { opacity: 0.9; }

main {
  flex: 1;
  display: grid;
  grid-template-columns: 360px 1fr;
  overflow: hidden;
}
aside {
  background: var(--bg-alt);
  border-right: 1px solid var(--border);
  display: flex;
  flex-direction: column;
}
.tabs {
  display: flex;
}
.tabs button {
  flex: 1;
  border-radius: 0;
  border: none;
  background: var(--bg);
  color: var(--text);
  border-bottom: 2px solid transparent;
}
.tabs button.active {
  border-bottom: 2px solid var(--accent);
  font-weight: bold;
}
#catBar { display:flex; gap:6px; padding:6px 8px; flex-wrap:wrap; }
#catBar .cat { background: var(--bg); color: var(--text); border:1px solid var(--border); padding:6px 10px; border-radius:999px; cursor:pointer; }
#catBar .cat.active { background: var(--accent); color:#fff; border-color: var(--accent); }

/* Search input compact */
aside input#searchInput {
  flex: 0 0 auto;
  width: calc(100% - 16px);
  margin: 8px;
}

#list {
  flex: 1;
  overflow-y: auto;
  padding: 6px;
}
.item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: transparent;
  border: 1px solid var(--border);
  border-radius: 10px;
  padding: 8px 10px;
  margin-bottom: 6px;
  cursor: pointer;
  transition: background 0.2s, border-color 0.2s;
}
.item:hover, .item.active {
  background: var(--accent);
  color: #fff;
  border-color: var(--accent);
}
.item .left {
  display:flex; align-items:center; gap:10px;
}
.logo-sm {
  width: 28px; height: 28px; border-radius: 6px; background: #222; display:flex; align-items:center; justify-content:center;
  overflow:hidden;
}
.logo-sm img { width:100%; height:100%; object-fit: contain; }
.logo-sm .ph { font-size: 16px; opacity: .8; }

.item span.star {
  cursor: pointer;
  font-size: 1.1em;
}

/* === PLAYER — rendu unifié partout (Chaînes, Favoris, etc.) === */
#playerSection {
  position: relative;
  display: block;
  background: #000;
  overflow: hidden;                 /* coupe tout débordement */
}

/* Tous les médias occupent EXACTEMENT le cadre du player */
#playerSection > video,
#playerSection > iframe,
#playerSection > audio {
  position: absolute;
  inset: 0;                         /* top/right/bottom/left: 0 */
  width: 100%;
  height: 100%;
  max-width: 100%;
  max-height: 100%;
  display: none;                    /* le JS met "block" sur le média actif */
  background: #000;
  object-fit: contain;              /* pas de crop */
  border: 0;
  box-sizing: border-box;
  z-index: 1;
}

/* Message d’attente : hors layout et caché dès que ça lit */
#noSource {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 12px;
  z-index: 0;                       /* sous le média */
  pointer-events: none;
  opacity: .85;
}
#playerSection.playing #noSource { display: none; }

/* === NOW BAR — en bas de page, ne masque jamais les contrôles === */
footer {
  height: 64px;                     /* réserve l’espace bas */
  font-size: 0;
  border-top: none;
}
#nowBar {
  position: fixed;
  left: 12px;
  right: 12px;
  bottom: max(12px, env(safe-area-inset-bottom));
  z-index: 1000;
  pointer-events: none;             /* laisse passer les clics vers le player */
}
#nowBar .nowbar-actions > *,
#nowBar a,
#nowBar button { pointer-events: auto; }

/* Layout global: évite les décalages et chevauchements */
main {
  overflow: hidden;                 /* évite glitch de grille */
  padding-bottom: 80px;             /* espace pour la nowBar */
}

/* Responsive */
@media (max-width: 900px) {
  main { grid-template-columns: 1fr; }
  aside { height: 260px; }
}
/* Hauteur pilotée par variables (qu’on mettra à jour en JS) */
:root {
  --header-h: 64px;        /* valeur par défaut, corrigée en JS */
  --bottom-reserve: 80px;  /* espace pour la nowBar */
}

#playerSection {
  /* Hauteur = fenêtre – header – réserve bas (nowBar) */
  height: calc(100svh - var(--header-h) - var(--bottom-reserve));
  min-height: 240px;       /* sécurité */
}

/* S’assure que la colonne player peut rétrécir */
main, main > * { min-height: 0; }

(() => {
  const bar = document.getElementById('catBar');
  if (!bar) return;
  bar.addEventListener('wheel', (e) => {
    if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) {
      bar.scrollLeft += e.deltaY;
      e.preventDefault();
    }
  }, { passive:false });
})();

